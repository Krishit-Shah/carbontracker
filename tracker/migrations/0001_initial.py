# Generated by Django 4.2.7 on 2025-08-07 16:00

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EcoTip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('category', models.CharField(choices=[('energy', 'Energy Saving'), ('transport', 'Transportation'), ('diet', 'Diet & Food'), ('waste', 'Waste Management'), ('general', 'General')], max_length=20)),
                ('potential_reduction', models.FloatField(blank=True, help_text='Potential CO2 reduction per month (kg)', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('source_url', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Household',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Household/Family name', max_length=200)),
                ('house_type', models.CharField(choices=[('apartment', 'Apartment'), ('independent', 'Independent House'), ('villa', 'Villa'), ('other', 'Other')], default='apartment', max_length=20)),
                ('members_count', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)])),
                ('city', models.CharField(max_length=100)),
                ('income_range', models.CharField(blank=True, choices=[('below_2lakh', 'Below ₹2 Lakh'), ('2_5lakh', '₹2-5 Lakh'), ('5_10lakh', '₹5-10 Lakh'), ('10_25lakh', '₹10-25 Lakh'), ('above_25lakh', 'Above ₹25 Lakh')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='IndianState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('electricity_emission_factor', models.FloatField(default=0.82)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goal_type', models.CharField(choices=[('monthly', 'Monthly Reduction'), ('yearly', 'Yearly Reduction'), ('per_capita', 'Per Capita Target')], max_length=20)),
                ('target_reduction_percentage', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('baseline_emissions', models.FloatField(help_text='Baseline emissions in kg CO2')),
                ('target_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('household', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goals', to='tracker.household')),
            ],
        ),
        migrations.CreateModel(
            name='TransportUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transport_mode', models.CharField(choices=[('bike', 'Motorcycle/Scooter'), ('car_petrol', 'Car (Petrol)'), ('car_diesel', 'Car (Diesel)'), ('car_cng', 'Car (CNG)'), ('auto', 'Auto-rickshaw'), ('bus', 'Bus'), ('train', 'Train'), ('metro', 'Metro'), ('flight_domestic', 'Domestic Flight'), ('flight_international', 'International Flight'), ('walking', 'Walking'), ('cycling', 'Bicycle')], max_length=25)),
                ('distance_km', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('frequency_per_month', models.PositiveIntegerField(default=1)),
                ('fuel_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('month_year', models.DateField()),
                ('emission_calculated', models.FloatField(blank=True, help_text='kg CO2', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('household', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transport_usage', to='tracker.household')),
            ],
        ),
        migrations.AddField(
            model_name='household',
            name='state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tracker.indianstate'),
        ),
        migrations.AddField(
            model_name='household',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='household', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='EmissionFactor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('energy', 'Energy'), ('transport', 'Transport'), ('diet', 'Diet'), ('waste', 'Waste')], max_length=20)),
                ('name', models.CharField(max_length=100)),
                ('unit', models.CharField(max_length=20)),
                ('emission_factor', models.FloatField(help_text='kg CO2 per unit')),
                ('source', models.CharField(blank=True, help_text='Data source', max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'unique_together': {('category', 'name')},
            },
        ),
        migrations.CreateModel(
            name='DietEmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diet_type', models.CharField(choices=[('vegan', 'Vegan'), ('vegetarian', 'Vegetarian'), ('eggetarian', 'Eggetarian'), ('pescatarian', 'Pescatarian'), ('chicken', 'Non-veg (Chicken)'), ('mutton', 'Non-veg (Mutton/Goat)'), ('mixed', 'Mixed Diet')], max_length=20)),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', '2-3 times per week'), ('monthly', 'Few times per month'), ('rarely', 'Rarely')], max_length=10)),
                ('food_waste_percentage', models.FloatField(default=10.0, help_text='Estimated food waste percentage', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('month_year', models.DateField()),
                ('emission_calculated', models.FloatField(blank=True, help_text='kg CO2', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('household', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diet_emissions', to='tracker.household')),
            ],
        ),
        migrations.CreateModel(
            name='MonthlyEmissionSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month_year', models.DateField()),
                ('total_energy_emissions', models.FloatField(default=0)),
                ('total_transport_emissions', models.FloatField(default=0)),
                ('total_diet_emissions', models.FloatField(default=0)),
                ('total_emissions', models.FloatField(default=0)),
                ('per_capita_emissions', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('household', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monthly_summaries', to='tracker.household')),
            ],
            options={
                'ordering': ['-month_year'],
                'unique_together': {('household', 'month_year')},
            },
        ),
        migrations.CreateModel(
            name='FuelPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fuel_type', models.CharField(choices=[('petrol', 'Petrol'), ('diesel', 'Diesel'), ('lpg', 'LPG'), ('cng', 'CNG'), ('electricity', 'Electricity')], max_length=20)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('unit', models.CharField(max_length=20)),
                ('date_recorded', models.DateField(default=django.utils.timezone.now)),
                ('source', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tracker.indianstate')),
            ],
            options={
                'ordering': ['-date_recorded'],
                'unique_together': {('fuel_type', 'state', 'date_recorded')},
            },
        ),
        migrations.CreateModel(
            name='EnergyUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('energy_source', models.CharField(choices=[('electricity', 'Electricity'), ('lpg', 'LPG'), ('cng', 'CNG'), ('kerosene', 'Kerosene'), ('wood', 'Wood/Biomass'), ('coal', 'Coal'), ('solar', 'Solar Energy')], max_length=20)),
                ('consumption', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('unit', models.CharField(max_length=10)),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('month_year', models.DateField(help_text='Month and year of consumption')),
                ('emission_calculated', models.FloatField(blank=True, help_text='kg CO2', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('household', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='energy_usage', to='tracker.household')),
            ],
            options={
                'unique_together': {('household', 'energy_source', 'month_year')},
            },
        ),
    ]
